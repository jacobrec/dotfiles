" Jacob Reckhard
" My vimrc file

" Misc {{{
set nocompatible              " be iMproved, required
let g:tex_flavor = "latex"
autocmd BufWritePre * :%s/\s\+$//e

autocmd BufRead,BufNewFile *.sc  set filetype=scheme
autocmd BufRead,BufNewFile *.asd set filetype=lisp


set backupdir=./.backup,.,/tmp
set directory=./.backup,/tmp
" Tabs {{{
set tabstop=4           " How large \t characters show up
set shiftwidth=4        " Indent amount for >>, << and autoindent
set expandtab           " Tab keystokes become spaces

set laststatus=2        " When should the status line be displayed
set cmdheight=1         " The height of the command bar at the bottom

set hlsearch            " highlight matches when searching
" }}}
" Buffers {{{
set hidden      " switch buffers when some are unsaved
" }}}
" }}}
" Plugins {{{
" Plugin List {{{
call plug#begin('~/.vim/plugged')
" Visuals
Plug 'vim-airline/vim-airline' " status line
Plug 'nathanaelkane/vim-indent-guides' " Visual indentation
Plug 'luochen1990/rainbow' " Pretty parenthesis
Plug 'KeitaNakamura/neodark.vim' " Color theme
Plug 'vim-airline/vim-airline-themes' " Status line theme

" Functionality
Plug 'wakatime/vim-wakatime' " Time tracking
Plug 'albfan/ag.vim' " Searching
Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' } " Autocomplete
Plug 'neomake/neomake' " Linting

" Lang Dart
Plug 'dart-lang/dart-vim-plugin'
" Lang Lisp
Plug 'eraserhd/parinfer-rust', {'do': 'cargo build --release'}
Plug 'jpalardy/vim-slime'
Plug 'wlangstroth/vim-racket'
" Lang Go
Plug 'fatih/vim-go'
Plug 'deoplete-plugins/deoplete-go', { 'do': 'make'}
" Lang Javascript
Plug 'ternjs/tern_for_vim'
Plug 'carlitux/deoplete-ternjs'
Plug 'pangloss/vim-javascript'
Plug 'mxw/vim-jsx'
Plug 'burner/vim-svelte'

" Lang Elm
Plug 'ElmCast/elm-vim'
" npm i -g eslint eslint-plugin-standard eslint-plugin-promise eslint-plugin-node eslint-plugin-json
call plug#end()
" }}}
" Plugin Configs {{{
let g:deoplete#enable_at_startup = 1
call neomake#configure#automake('nrwi', 500)
let g:slime_target="neovim"
" }}}
" }}}
" Remappings {{{
" Set leader
nnoremap <SPACE> <Nop>
map <SPACE> <leader>

" Searching {{{
nnoremap <leader>sp :Ag!<SPACE>
nnoremap <leader>ss :AgBuffer!<SPACE>
" }}}
" Split management {{{
nnoremap <leader>wsh :split<CR>
nnoremap <leader>wsv :vsplit<CR>
nnoremap <leader>wn <C-W><C-W>
nnoremap <leader>wiv :resize +5<CR>
nnoremap <leader>wih :vertical resize +5<CR>
nnoremap <leader>wdv :resize -5<CR>
nnoremap <leader>wdh :vertical resize -5<CR>
nnoremap <leader>wh <C-w>h
nnoremap <leader>wj <C-w>j
nnoremap <leader>wk <C-w>k
nnoremap <leader>wl <C-w>l
" }}}
" Buffer managment {{{
noremap <TAB> :bn<CR>
noremap <S-TAB> :bp<CR>
" }}}
" Save and Quit {{{
command W w
command Wq wq
command WQ wq
command Q q
" }}}

tnoremap <Esc> <C-\><C-n>| " Leave terminal mode
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"| " tab to navigate deoplete completion
inoremap jk <Esc>| " Leave insert mode easier
command ID :echo b:terminal_job_id
" }}}
" Visual Settings {{{
syntax on                       " Enable syntax highlighting
"colorscheme neodark             " My colour scheme of choice
"let g:neodark#use_256color = 1
highlight TermCursor ctermfg=red guifg=red

let g:indent_guides_auto_colors = 0
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=236
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=NONE
    " indent colors
        " indent colors
            " indent colors

let g:airline#extensions#tabline#enabled = 1 " show buffers at top
let g:airline#extensions#tabline#buffer_min_count = 2 " but only show buffers when more then 1
let g:airline_theme='minimalist' " Theme for airline statusbar plugin
let g:rainbow_active = 1
let g:indent_guides_enable_on_vim_startup = 1

set listchars=tab:»\ ,extends:›,precedes:‹,nbsp:·,trail:·
set list
set number
" }}}


" This last line is so this file autofolds when opening
" vim:foldmethod=marker:foldlevel=0
